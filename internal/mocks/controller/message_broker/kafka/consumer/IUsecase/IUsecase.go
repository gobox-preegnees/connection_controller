// Code generated by MockGen. DO NOT EDIT.
// Source: consumer.go

// Package mock_kafka is a generated GoMock package.
package mock_kafka

import (
	context "context"
	reflect "reflect"

	entity "github.com/gobox-preegnees/connection_controller/internal/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockIUsecase is a mock of IUsecase interface.
type MockIUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIUsecaseMockRecorder
}

// MockIUsecaseMockRecorder is the mock recorder for MockIUsecase.
type MockIUsecaseMockRecorder struct {
	mock *MockIUsecase
}

// NewMockIUsecase creates a new mock instance.
func NewMockIUsecase(ctrl *gomock.Controller) *MockIUsecase {
	mock := &MockIUsecase{ctrl: ctrl}
	mock.recorder = &MockIUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUsecase) EXPECT() *MockIUsecaseMockRecorder {
	return m.recorder
}

// SaveConsistency mocks base method.
func (m *MockIUsecase) SaveConsistency(ctx context.Context, consistency entity.Consistency) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveConsistency", ctx, consistency)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveConsistency indicates an expected call of SaveConsistency.
func (mr *MockIUsecaseMockRecorder) SaveConsistency(ctx, consistency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveConsistency", reflect.TypeOf((*MockIUsecase)(nil).SaveConsistency), ctx, consistency)
}
